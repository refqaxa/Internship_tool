// <auto-generated />
using System;
using BPV_app.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BPV_tool.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BPV_app.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad60ac3e-c06a-44b2-bf91-ebf31ba9cbf0"),
                            Email = "admin@bpv.local",
                            FirstName = "Admin",
                            LastName = "User",
                            PasswordHash = "$2a$11$Xst.yGIMBttmSSzEU/7STe60Oii.FOmTFshWcmbvokgcngDOq8nOO",
                            RoleId = new Guid("d16f78c8-12ce-4f83-948c-46a2fd7b8e48")
                        });
                });

            modelBuilder.Entity("BPV_app.Models.BPVApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BPVStepId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BPVStepId")
                        .IsUnique()
                        .HasFilter("[BPVStepId] IS NOT NULL");

                    b.HasIndex("ReviewerId");

                    b.ToTable("BPVApprovals");
                });

            modelBuilder.Entity("BPV_app.Models.BPVProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("BPVProcesses");
                });

            modelBuilder.Entity("BPV_app.Models.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("BPV_app.Models.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BPVProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Hours")
                        .HasColumnType("float");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BPVProcessId");

                    b.HasIndex("StudentId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("BPV_app.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d16f78c8-12ce-4f83-948c-46a2fd7b8e48"),
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("eaa0d75d-47f1-4365-9a21-79df264dd29e"),
                            RoleName = "Teacher"
                        },
                        new
                        {
                            Id = new Guid("2bf761ae-8f9f-413d-86d2-60a17bdb6c86"),
                            RoleName = "Student"
                        });
                });

            modelBuilder.Entity("BPV_tool.Server.Models.BPVStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BPVProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StepIndex")
                        .HasColumnType("int");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BPVProcessId");

                    b.HasIndex("FileId");

                    b.ToTable("BPVSteps");
                });

            modelBuilder.Entity("BPV_app.Models.AppUser", b =>
                {
                    b.HasOne("BPV_app.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BPV_app.Models.BPVApproval", b =>
                {
                    b.HasOne("BPV_tool.Server.Models.BPVStep", "BPVStep")
                        .WithOne("Approval")
                        .HasForeignKey("BPV_app.Models.BPVApproval", "BPVStepId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BPV_app.Models.AppUser", "Reviewer")
                        .WithMany("BPVApprovals")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BPVStep");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("BPV_app.Models.BPVProcess", b =>
                {
                    b.HasOne("BPV_app.Models.AppUser", "Student")
                        .WithMany("StartedProcesses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BPV_app.Models.AppUser", "Supervisor")
                        .WithMany("SupervisedProcesses")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("BPV_app.Models.File", b =>
                {
                    b.HasOne("BPV_app.Models.AppUser", "Student")
                        .WithMany("UploadedFiles")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BPV_app.Models.Log", b =>
                {
                    b.HasOne("BPV_app.Models.BPVProcess", "BPVProcess")
                        .WithMany("Logs")
                        .HasForeignKey("BPVProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BPV_app.Models.AppUser", "Student")
                        .WithMany("Logs")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BPVProcess");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BPV_tool.Server.Models.BPVStep", b =>
                {
                    b.HasOne("BPV_app.Models.BPVProcess", "BPVProcess")
                        .WithMany("Steps")
                        .HasForeignKey("BPVProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BPV_app.Models.File", "File")
                        .WithMany("ProcessSteps")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("BPVProcess");

                    b.Navigation("File");
                });

            modelBuilder.Entity("BPV_app.Models.AppUser", b =>
                {
                    b.Navigation("BPVApprovals");

                    b.Navigation("Logs");

                    b.Navigation("StartedProcesses");

                    b.Navigation("SupervisedProcesses");

                    b.Navigation("UploadedFiles");
                });

            modelBuilder.Entity("BPV_app.Models.BPVProcess", b =>
                {
                    b.Navigation("Logs");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("BPV_app.Models.File", b =>
                {
                    b.Navigation("ProcessSteps");
                });

            modelBuilder.Entity("BPV_app.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BPV_tool.Server.Models.BPVStep", b =>
                {
                    b.Navigation("Approval")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
